name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: TypeScript compilation check
      run: npx tsc --noEmit

  build-test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build renderer
      run: npm run build

    - name: Create distributables
      run: npm run make

    - name: Test packaged app exists
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          test -d "out/Viberunner-win32-x64" || test -d "out/make"
          echo "✅ Windows package created successfully"
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          test -d "out/Viberunner-darwin-x64" || test -d "out/Viberunner-darwin-arm64" || test -d "out/make"
          echo "✅ macOS package created successfully"
        else
          test -d "out/Viberunner-linux-x64" || test -d "out/make"
          echo "✅ Linux package created successfully"
        fi

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: viberunner-package-${{ matrix.os }}-${{ github.sha }}
        path: |
          out/**/*
        retention-days: 3

  build-status:
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build-test]
    if: always()

    steps:
    - name: Check build status
      run: |
        if [ "${{ needs.lint-and-typecheck.result }}" = "success" ] && \
           [ "${{ needs.build-test.result }}" = "success" ]; then
          echo "✅ All critical CI checks passed!"
          exit 0
        else
          echo "❌ Critical CI checks failed:"
          echo "  Lint & TypeCheck: ${{ needs.lint-and-typecheck.result }}"
          echo "  Build Test: ${{ needs.build-test.result }}"
          exit 1
        fi